{
  "name": "redis-stream",
  "version": "0.1.0",
  "description": "create arbitrary node.js streams to and from redis",
  "main": "index.js",
  "bin": {},
  "directories": {
    "example": "example",
    "test": "test"
  },
  "dependencies": {
    "event-stream": "~2.1.5"
  },
  "devDependencies": {
    "tap": "~0.2.5"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tblobaum/redis-stream.git"
  },
  "homepage": "https://github.com/tblobaum/redis-stream",
  "keywords": [
    "redis",
    "stream"
  ],
  "author": {
    "name": "Thomas Blobaum",
    "email": "tblobaum@gmail.com",
    "url": "https://github.com/tblobaum/"
  },
  "license": "MIT",
  "readme": "# redis-stream\n\n[![Build Status](https://secure.travis-ci.org/tblobaum/redis-stream.png)](http://travis-ci.org/tblobaum/redis-stream)\n\n# Example\n\nIn the `example` directory there are various streaming examples.\n\n```js\n\n\n```\n\n# Methods\n\n``` js\nvar Redis = require('redis-stream')\n  , client = new Redis(6379, localhost, 0)\n```\n\n## new Redis([port] [, host] [, database])\nReturn an object that streams can be created from with the `port`, `host`, and `database` options -- `port` defaults to `6379`, `host` to `localhsot` and `database` to `0`.\n\n## client.stream([arg1] [, arg2] [, argn])\nReturn a [node.js api compatible stream](http://nodejs.org/api/streams.html) that is readable, writeable, and can be piped. All calls to `write` on this stream will be prepended with the optional arguments passed to `client.stream`\n\nCreate a streaming instance of rpop:\n\n``` js\nvar rpop = client.stream('rpop')\nrpop.pipe(process.stdout)\nrpop.write('my-list-key')\n```\n\nWhich you can then pipe redis keys to, and they resulting elements will be piped to stdout.\n\n## Redis.parse.hgetall()\n\nReturn a stream that can be piped to to transform an `hmget` or `hgetall` stream into valid json, with a little help from [JSONStream](https://github.com/dominictarr/JSONStream) we can turn this into a real object.\n\n``` js\n  hgetall = client.stream('hgetall')\n  hgetall\n    .pipe(Redis.parse.hgetall())\n    .pipe(JSONStream.stringifyObject())\n    .pipe(process.stdout)\n\n  hgetall.write('my-hash-key-1')\n```\n\n## Redis.parse(array)\nIt's possible to interact directly with the command parser that transforms a stream into valid redis data stream\n\n``` js\nvar Redis = require('../')\n  , redis = new Redis(6379, 'localhost')\n  , stream = redis.stream()\n\nstream.pipe(Redis.es.join('\\r\\n')).pipe(process.stdout)\n\n// interact with the redis network connection directly\n// using `Redis.parse`, which is used internally\nstream.redis.write(Redis.parse([ 'info' ]))\nstream.redis.write(Redis.parse([ 'lpush', 'mylist', 'val' ]))\nstream.end()\n```\n\n# Install\n\n`npm install redis-stream`\n\n# License\n\n(The MIT License)\n\nCopyright (c) 2012 Thomas Blobaum <tblobaum@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "_id": "redis-stream@0.1.0",
  "dist": {
    "shasum": "ffead8505478d30b88274b1c365490737a38d31b",
    "tarball": "https://registry.npmjs.org/redis-stream/-/redis-stream-0.1.0.tgz"
  },
  "maintainers": [
    {
      "name": "tblobaum",
      "email": "tblobaum@gmail.com"
    }
  ],
  "_shasum": "ffead8505478d30b88274b1c365490737a38d31b",
  "_resolved": "https://registry.npmjs.org/redis-stream/-/redis-stream-0.1.0.tgz",
  "_from": "redis-stream@latest",
  "bugs": {
    "url": "https://github.com/tblobaum/redis-stream/issues"
  }
}
